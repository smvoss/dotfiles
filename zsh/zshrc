# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load. (~/.oh-my-zsh/themes)
ZSH_THEME="fletcherm"

# Uncomment the following line to enable command auto-correction.
ENABLE_CORRECTION="true"

setopt HIST_EXPIRE_DUPS_FIRST    # Expire duplicate entries first when trimming history.
setopt HIST_IGNORE_DUPS          # Don't record an entry that was just recorded again.
setopt HIST_IGNORE_ALL_DUPS      # Delete old recorded entry if new entry is a duplicate.
setopt HIST_FIND_NO_DUPS         # Do not display a line previously found.

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git)

source $ZSH/oh-my-zsh.sh

alias sourceit="source $0"
alias zrc="vi ~/.zshrc && source ~/.zshrc"
alias path="readlink -f"
alias grep="noglob grep"
alias find="noglob find"
alias scrotc="scrot -s ~/foo.png && xclip ~/foo.png && rm ~/foo.png"

export LANG=en_US.UTF-8

check_dotfiles_status() {
	local dotfiles_loc="${HOME}/.dotfiles"

	if [ ! -d ${dotfiles_loc} ]; then
		echo "Dotfiles not under version control at `${dotfiles_loc}`."
	fi
	pushd "${dotfiles_loc}" &> /dev/null

	df_status=$(git status --short)
	if [ "${df_status}" != "" ]; then
		echo "Warning! Dotfiles have unsaved changes:"
		echo "${df_status}"
	fi
	popd &> /dev/null
}
check_dotfiles_status

##############################################################################
# Aliases
##############################################################################
alias make="tee_make"
tee_make () {
    \make "$@" | tee make.log
}

alias p="new_pushd"
new_pushd () {
	pushd "$@" > /dev/null
}

alias o="new_popd"
new_popd () {
	popd "$@" > /dev/null
}

alias f="pushd_builtin"
pushd_builtin ()
{
	builtin pushd > /dev/null
}

alias cd="new_cd"
# If no param is given, add ~ (for cd switch to homedir functionality)
new_cd () {
	if [ -n "$@" ] 
	then # there were some args, pass through to pushd
		p "$@"
	else # no arguments, default cd action (go to homedir)
		p ~
	fi
}

for file in ~/.*.zrc; do
	source $file
done

##############################################################################
# Files to be sourced, if they exist
##############################################################################
check_then_source () {
	if [ -f "${1}" ]; then 
		source "${1}"
		return 0
	else
		return 1
	fi
}

check_then_source ~/.fzf.zsh
check_then_source ~/.fzf/shell/key-bindings.zsh

unset -f check_then_source  # no longer need this function after all sourcing

export PATH="$HOME/.cargo/bin:$HOME/.local/bin:$PATH"
export PATH="/home/smvoss/Downloads/defold/Defold:$PATH"
export PATH="/home/smvoss/Programming/vfio:$PATH"
export VK_ICD_FILENAMES="/usr/share/vulkan/icd.d/nvidia_icd.json"
export LIBVA_DRIVER_NAME=vdpau
export VDPAU_DRIVER=nvidia

export GPG_TTY=$(tty)
export SSH_AUTH_SOCK=$(gpgconf --list-dirs | grep ssh | cut -d ':' -f 2)
gpg-connect-agent updatestartuptty /bye > /dev/null
