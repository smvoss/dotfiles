# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
#ZSH_THEME="robbyrussell"
ZSH_THEME="fletcherm"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git)

# User configuration

# export PATH="/usr/bin:/bin:/usr/sbin:/sbin:$PATH"
# export MANPATH="/usr/local/man:$MANPATH"

source $ZSH/oh-my-zsh.sh

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
alias sourceit="source $0"
alias zrc="vi ~/.zshrc && source ~/.zshrc"
alias track_ascii_notes="noglob find ~/notes -name \"*asciidoc\" -not -name \"*~\" -not -name \"*swp\" | entr asciidoctor /_ -D ~/www/notes >> ~/logs/track_ascii_notes.log 2>&1"
alias path="readlink -f"
alias grep="noglob grep"
alias find="noglob find"

#alias make="tee_make"
#tee_make () {
#    make "$@"
#}

alias p="new_pushd"
new_pushd () {
	pushd "$@" > /dev/null
}

alias o="new_popd"
new_popd () {
	popd "$@" > /dev/null
}

alias f="pushd_builtin"
pushd_builtin ()
{
	builtin pushd > /dev/null
}

alias cd="new_cd"
# If no param is given, add ~ (for cd switch to homedir functionality)
new_cd () {
	if [ -n "$@" ] 
	then # there were some args, pass through to pushd
		p "$@"
	else # no arguments, default cd action (go to homedir)
		p ~
	fi
}

# Auto launch tmux when connecting to terminal
#if [[ -z "$TMUX" ]]; then
#	tmux has-session &> /dev/null
#	if [ $? -eq 1 ]; then
#		exec tmux new
#		exit
#	else
#		exec tmux attach
#		exit
#	fi
#fi

# add ~/bin as a searchable path for locally installed items
export PATH=$PATH:~/.gem/ruby/2.4.0/bin:~/bin

# check if entr is running, and dump the response (checking return value)
# TODO: this should be enable/disableable, it will fail if entr is not installed, or if ~/notes, or ~/www do not exist
ps aux | grep [e]ntr >> /dev/null 2>&1
if [ $? -eq 0 ]; then
	# its running, do nothing
else
	# its not running, start it
#	noglob find ~/notes -name "*asciidoc" -not -name "*~" -not -name "*swp" | nohup entr asciidoctor /_ -D ~/www/notes 2>&1 > /dev/null &

fi

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
